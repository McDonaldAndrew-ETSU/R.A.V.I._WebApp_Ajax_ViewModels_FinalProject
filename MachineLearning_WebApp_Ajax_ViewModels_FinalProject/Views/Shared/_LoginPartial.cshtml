@using Microsoft.AspNetCore.Identity
@using MachineLearning_WebApp_Ajax_ViewModels_FinalProject.Services

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserRepository userRepo

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await userRepo.ReadByUsernameAndGetRolesAsync(User.Identity?.Name!);
        var name = $"{user!.Name}";
        var userName = $"{user!.UserName}";

        <li class="nav-item">
            <div id="hiddenName" data-name="@name" data-username="@userName" hidden></div>
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Welcome @name!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
